{
  "description": {
    "consumerName": "Case",
    "providerName": "Pact Broker"
  },
  "matcherLookup": {
    "variable:default:token": {
      "case:matcher:type": "CascadingContext",
      "case:matcher:child": {
        "case:matcher:type": "CascadingContext",
        "case:matcher:child": "TOKEN",
        "case:context:matchBy": "type"
      },
      "case:context:matchBy": "type"
    },
    "matcher:a (200) response without a body": {
      "status": 200,
      "case:matcher:type": "HttpResponseMatcher"
    },
    "matcher:an http \"PUT\" request to \"/pacts/provider/http%20request%20provider/consumer/http%20request%20consumer/version/0.3.0<any string>\" without a body with the following headers an object shaped like {accept: \"application/json\",authorization: \"Bearer {{token}}\"}": {
      "method": "PUT",
      "path": {
        "case:matcher:type": "StringPrefix",
        "case:matcher:prefix": "/pacts/provider/http%20request%20provider/consumer/http%20request%20consumer/version/0.3.0",
        "case:matcher:suffix": {
          "case:matcher:type": "MatchString",
          "case:matcher:example": "someString",
          "case:matcher:resolvesTo": "string",
          "case:context:matchBy": "type"
        },
        "case:matcher:resolvesTo": "string"
      },
      "headers": {
        "accept": "application/json",
        "authorization": {
          "case:matcher:type": "StringPrefix",
          "case:matcher:prefix": "Bearer ",
          "case:matcher:suffix": {
            "case:matcher:type": "ContextVariable",
            "case:matcher:variableName": "token"
          },
          "case:matcher:resolvesTo": "string"
        }
      },
      "case:matcher:type": "HttpRequestMatcher"
    },
    "variable:default:invalidToken": {
      "case:matcher:type": "CascadingContext",
      "case:matcher:child": {
        "case:matcher:type": "CascadingContext",
        "case:matcher:child": "TOKEN",
        "case:context:matchBy": "type"
      },
      "case:context:matchBy": "type"
    },
    "matcher:a (403) response without a body": {
      "status": 403,
      "case:matcher:type": "HttpResponseMatcher"
    },
    "matcher:an http \"PUT\" request to \"/pacts/provider/http%20request%20provider/consumer/http%20request%20consumer/version/0.3.0<any string>\" without a body with the following headers an object shaped like {accept: \"application/json\",authorization: \"Bearer {{invalidToken}}\"}": {
      "method": "PUT",
      "path": {
        "case:matcher:type": "StringPrefix",
        "case:matcher:prefix": "/pacts/provider/http%20request%20provider/consumer/http%20request%20consumer/version/0.3.0",
        "case:matcher:suffix": {
          "case:matcher:type": "MatchString",
          "case:matcher:example": "someString",
          "case:matcher:resolvesTo": "string",
          "case:context:matchBy": "type"
        },
        "case:matcher:resolvesTo": "string"
      },
      "headers": {
        "accept": "application/json",
        "authorization": {
          "case:matcher:type": "StringPrefix",
          "case:matcher:prefix": "Bearer ",
          "case:matcher:suffix": {
            "case:matcher:type": "ContextVariable",
            "case:matcher:variableName": "invalidToken"
          },
          "case:matcher:resolvesTo": "string"
        }
      },
      "case:matcher:type": "HttpRequestMatcher"
    }
  },
  "examples": [
    {
      "states": [
        {
          "case:state:type": "StateWithVariables",
          "stateName": "auth token is valid",
          "variables": {
            "token": {
              "case:matcher:type": "CascadingContext",
              "case:matcher:child": "TOKEN",
              "case:context:matchBy": "type"
            }
          }
        }
      ],
      "mock": {
        "request": {
          "case:matcher:type": "Lookup",
          "case:matcher:uniqueName": "an http \"PUT\" request to \"/pacts/provider/http%20request%20provider/consumer/http%20request%20consumer/version/0.3.0<any string>\" without a body with the following headers an object shaped like {accept: \"application/json\",authorization: \"Bearer {{token}}\"}",
          "case:matcher:child": {
            "method": "PUT",
            "path": {
              "case:matcher:type": "StringPrefix",
              "case:matcher:prefix": "/pacts/provider/http%20request%20provider/consumer/http%20request%20consumer/version/0.3.0",
              "case:matcher:suffix": {
                "case:matcher:type": "MatchString",
                "case:matcher:example": "someString",
                "case:matcher:resolvesTo": "string",
                "case:context:matchBy": "type"
              },
              "case:matcher:resolvesTo": "string"
            },
            "headers": {
              "accept": "application/json",
              "authorization": {
                "case:matcher:type": "StringPrefix",
                "case:matcher:prefix": "Bearer ",
                "case:matcher:suffix": {
                  "case:matcher:type": "ContextVariable",
                  "case:matcher:variableName": "token"
                },
                "case:matcher:resolvesTo": "string"
              }
            },
            "case:matcher:type": "HttpRequestMatcher"
          }
        },
        "response": {
          "case:matcher:type": "Lookup",
          "case:matcher:uniqueName": "a (200) response without a body",
          "case:matcher:child": {
            "status": 200,
            "case:matcher:type": "HttpResponseMatcher"
          }
        },
        "case:mock:type": "MockHttpServer",
        "case:run:context:setup": {
          "write": {
            "type": "MockHttpServer",
            "stateVariables": "default",
            "triggers": "provided"
          },
          "read": {
            "type": "MockHttpClient",
            "stateVariables": "state",
            "triggers": "generated"
          }
        }
      },
      "result": "VERIFIED"
    },
    {
      "states": [
        {
          "case:state:type": "StateWithVariables",
          "stateName": "auth token is not valid",
          "variables": {
            "invalidToken": {
              "case:matcher:type": "CascadingContext",
              "case:matcher:child": "TOKEN",
              "case:context:matchBy": "type"
            }
          }
        }
      ],
      "mock": {
        "request": {
          "case:matcher:type": "Lookup",
          "case:matcher:uniqueName": "an http \"PUT\" request to \"/pacts/provider/http%20request%20provider/consumer/http%20request%20consumer/version/0.3.0<any string>\" without a body with the following headers an object shaped like {accept: \"application/json\",authorization: \"Bearer {{invalidToken}}\"}",
          "case:matcher:child": {
            "method": "PUT",
            "path": {
              "case:matcher:type": "StringPrefix",
              "case:matcher:prefix": "/pacts/provider/http%20request%20provider/consumer/http%20request%20consumer/version/0.3.0",
              "case:matcher:suffix": {
                "case:matcher:type": "MatchString",
                "case:matcher:example": "someString",
                "case:matcher:resolvesTo": "string",
                "case:context:matchBy": "type"
              },
              "case:matcher:resolvesTo": "string"
            },
            "headers": {
              "accept": "application/json",
              "authorization": {
                "case:matcher:type": "StringPrefix",
                "case:matcher:prefix": "Bearer ",
                "case:matcher:suffix": {
                  "case:matcher:type": "ContextVariable",
                  "case:matcher:variableName": "invalidToken"
                },
                "case:matcher:resolvesTo": "string"
              }
            },
            "case:matcher:type": "HttpRequestMatcher"
          }
        },
        "response": {
          "case:matcher:type": "Lookup",
          "case:matcher:uniqueName": "a (403) response without a body",
          "case:matcher:child": {
            "status": 403,
            "case:matcher:type": "HttpResponseMatcher"
          }
        },
        "case:mock:type": "MockHttpServer",
        "case:run:context:setup": {
          "write": {
            "type": "MockHttpServer",
            "stateVariables": "default",
            "triggers": "provided"
          },
          "read": {
            "type": "MockHttpClient",
            "stateVariables": "state",
            "triggers": "generated"
          }
        }
      },
      "result": "VERIFIED"
    }
  ],
  "consumer": {
    "name": "Case"
  },
  "provider": {
    "name": "Pact Broker"
  }
}
{
  "contractType": "case::contract",
  "description": {
    "consumerName": "Case",
    "providerName": "Pact Broker"
  },
  "metadata": {
    "case": {
      "version": "0.6.0"
    }
  },
  "matcherLookup": {
    "variable:default:token": {
      "case:matcher:type": "CascadingContext",
      "case:matcher:child": {
        "case:matcher:type": "CascadingContext",
        "case:matcher:child": "TOKEN",
        "case:context:matchBy": "type"
      },
      "case:context:matchBy": "type"
    },
    "variable:default:providerName": {
      "case:matcher:type": "CascadingContext",
      "case:matcher:child": {
        "case:matcher:type": "CascadingContext",
        "case:matcher:child": "http request provider",
        "case:context:matchBy": "type"
      },
      "case:context:matchBy": "type"
    },
    "matcher:a (200) response with body an object shaped like {_embedded: an object shaped like {pacts: an array where each entry matches an object shaped like {verificationProperties: an object shaped like {notices: an array where each entry matches an object shaped like {text: <any string>}},_links: an object shaped like {self: an object shaped like {href: <any string>,name: <any string>}}}},_links: an object shaped like {self: an object shaped like {href: <any string>,title: <any string>}}}": {
      "status": 200,
      "body": {
        "_embedded": {
          "pacts": {
            "case:matcher:type": "ArrayEachEntryLike",
            "case:matcher:matcher": {
              "verificationProperties": {
                "notices": {
                  "case:matcher:type": "ArrayEachEntryLike",
                  "case:matcher:matcher": {
                    "case:matcher:type": "CascadingContext",
                    "case:matcher:child": {
                      "text": "This pact is being verified because it is the pact for the latest version of Foo tagged with 'dev'"
                    },
                    "case:context:matchBy": "type"
                  }
                }
              },
              "_links": {
                "case:matcher:type": "CascadingContext",
                "case:matcher:child": {
                  "self": {
                    "href": "http://localhost:9292/pacts/provider/Bar/consumer/Foo/pact-version/0e3369199f4008231946e0245474537443ccda2a",
                    "name": "Pact between Foo (v1.0.0) and Bar"
                  }
                },
                "case:context:matchBy": "type"
              }
            }
          }
        },
        "_links": {
          "case:matcher:type": "CascadingContext",
          "case:matcher:child": {
            "self": {
              "href": "http://localhost:9292/pacts/provider/Bar/for-verification",
              "title": "Pacts to be verified"
            }
          },
          "case:context:matchBy": "type"
        }
      },
      "case:matcher:type": "HttpResponseMatcher"
    },
    "matcher:an http \"POST\" request to uriEncoded string '\"/pacts/provider/{{providerName}}/for-verification\"' with a body with the following headers an object shaped like {accept: \"application/hal+json\",authorization: \"Bearer {{token}}\"}": {
      "method": "POST",
      "path": {
        "case:matcher:type": "UrlEncodedString",
        "case:matcher:child": {
          "case:matcher:type": "StringPrefix",
          "case:matcher:prefix": "/pacts/provider/",
          "case:matcher:suffix": {
            "case:matcher:type": "StringSuffix",
            "case:matcher:prefix": {
              "case:matcher:type": "ContextVariable",
              "case:matcher:variableName": "providerName"
            },
            "case:matcher:suffix": "/for-verification",
            "case:matcher:resolvesTo": "string"
          },
          "case:matcher:resolvesTo": "string"
        },
        "case:matcher:accepts": "string",
        "case:matcher:resolvesTo": "string"
      },
      "body": {
        "consumerVersionSelectors": {
          "case:matcher:type": "ArrayEachEntryLike",
          "case:matcher:matcher": {
            "case:matcher:type": "ObjectValuesMatch",
            "case:matcher:matcher": {
              "case:matcher:type": "MatchBoolean",
              "case:matcher:example": true,
              "case:context:matchBy": "type",
              "case:matcher:resolvesTo": "boolean"
            }
          }
        },
        "providerVersionTags": [
          "main"
        ]
      },
      "headers": {
        "accept": "application/hal+json",
        "authorization": {
          "case:matcher:type": "StringPrefix",
          "case:matcher:prefix": "Bearer ",
          "case:matcher:suffix": {
            "case:matcher:type": "ContextVariable",
            "case:matcher:variableName": "token",
            "case:matcher:resolvesTo": "string"
          },
          "case:matcher:resolvesTo": "string"
        }
      },
      "case:matcher:type": "HttpRequestMatcher"
    },
    "variable:default:username": {
      "case:matcher:type": "CascadingContext",
      "case:matcher:child": {
        "case:matcher:type": "CascadingContext",
        "case:matcher:child": "someUsername",
        "case:context:matchBy": "type"
      },
      "case:context:matchBy": "type"
    },
    "variable:default:password": {
      "case:matcher:type": "CascadingContext",
      "case:matcher:child": {
        "case:matcher:type": "CascadingContext",
        "case:matcher:child": "somePassword",
        "case:context:matchBy": "type"
      },
      "case:context:matchBy": "type"
    },
    "matcher:an http \"POST\" request to uriEncoded string '\"/pacts/provider/{{providerName}}/for-verification\"' with a body with the following headers an object shaped like {accept: \"application/hal+json\",authorization: \"Basic http basic auth with username='{{username}}' and password={{password}}\"}": {
      "method": "POST",
      "path": {
        "case:matcher:type": "UrlEncodedString",
        "case:matcher:child": {
          "case:matcher:type": "StringPrefix",
          "case:matcher:prefix": "/pacts/provider/",
          "case:matcher:suffix": {
            "case:matcher:type": "StringSuffix",
            "case:matcher:prefix": {
              "case:matcher:type": "ContextVariable",
              "case:matcher:variableName": "providerName"
            },
            "case:matcher:suffix": "/for-verification",
            "case:matcher:resolvesTo": "string"
          },
          "case:matcher:resolvesTo": "string"
        },
        "case:matcher:accepts": "string",
        "case:matcher:resolvesTo": "string"
      },
      "body": {
        "consumerVersionSelectors": {
          "case:matcher:type": "ArrayEachEntryLike",
          "case:matcher:matcher": {
            "case:matcher:type": "ObjectValuesMatch",
            "case:matcher:matcher": {
              "case:matcher:type": "MatchBoolean",
              "case:matcher:example": true,
              "case:context:matchBy": "type",
              "case:matcher:resolvesTo": "boolean"
            }
          }
        },
        "providerVersionTags": [
          "main"
        ]
      },
      "headers": {
        "accept": "application/hal+json",
        "authorization": {
          "case:matcher:type": "StringPrefix",
          "case:matcher:prefix": "Basic ",
          "case:matcher:suffix": {
            "case:matcher:type": "HttpBasicAuth",
            "case:matcher:username": {
              "case:matcher:type": "ContextVariable",
              "case:matcher:variableName": "username",
              "case:matcher:resolvesTo": "string"
            },
            "case:matcher:password": {
              "case:matcher:type": "ContextVariable",
              "case:matcher:variableName": "password",
              "case:matcher:resolvesTo": "string"
            },
            "case:matcher:resolvesTo": "string"
          },
          "case:matcher:resolvesTo": "string"
        }
      },
      "case:matcher:type": "HttpRequestMatcher"
    },
    "matcher:a (200) response without a body": {
      "status": 200,
      "case:matcher:type": "HttpResponseMatcher"
    },
    "matcher:an http \"PUT\" request to \"/pacts/provider/http%20request%20provider/consumer/http%20request%20consumer/version/<any string>\" without a body with the following headers an object shaped like {accept: \"application/json\",authorization: \"Bearer {{token}}\"}": {
      "method": "PUT",
      "path": {
        "case:matcher:type": "StringPrefix",
        "case:matcher:prefix": "/pacts/provider/http%20request%20provider/consumer/http%20request%20consumer/version/",
        "case:matcher:suffix": {
          "case:matcher:type": "MatchString",
          "case:matcher:example": "someString",
          "case:matcher:resolvesTo": "string",
          "case:context:matchBy": "type"
        },
        "case:matcher:resolvesTo": "string"
      },
      "headers": {
        "accept": "application/json",
        "authorization": {
          "case:matcher:type": "StringPrefix",
          "case:matcher:prefix": "Bearer ",
          "case:matcher:suffix": {
            "case:matcher:type": "ContextVariable",
            "case:matcher:variableName": "token"
          },
          "case:matcher:resolvesTo": "string"
        }
      },
      "case:matcher:type": "HttpRequestMatcher"
    },
    "variable:default:invalidToken": {
      "case:matcher:type": "CascadingContext",
      "case:matcher:child": {
        "case:matcher:type": "CascadingContext",
        "case:matcher:child": "TOKEN",
        "case:context:matchBy": "type"
      },
      "case:context:matchBy": "type"
    },
    "matcher:a (403) response without a body": {
      "status": 403,
      "case:matcher:type": "HttpResponseMatcher"
    },
    "matcher:an http \"PUT\" request to \"/pacts/provider/http%20request%20provider/consumer/http%20request%20consumer/version/<any string>\" without a body with the following headers an object shaped like {accept: \"application/json\",authorization: \"Bearer {{invalidToken}}\"}": {
      "method": "PUT",
      "path": {
        "case:matcher:type": "StringPrefix",
        "case:matcher:prefix": "/pacts/provider/http%20request%20provider/consumer/http%20request%20consumer/version/",
        "case:matcher:suffix": {
          "case:matcher:type": "MatchString",
          "case:matcher:example": "someString",
          "case:matcher:resolvesTo": "string",
          "case:context:matchBy": "type"
        },
        "case:matcher:resolvesTo": "string"
      },
      "headers": {
        "accept": "application/json",
        "authorization": {
          "case:matcher:type": "StringPrefix",
          "case:matcher:prefix": "Bearer ",
          "case:matcher:suffix": {
            "case:matcher:type": "ContextVariable",
            "case:matcher:variableName": "invalidToken"
          },
          "case:matcher:resolvesTo": "string"
        }
      },
      "case:matcher:type": "HttpRequestMatcher"
    },
    "matcher:a (200) response with body an object shaped like {notices: an array containing an object shaped like {level: \"debug\",text: <any string>}, and an array containing an object shaped like {level: \"info\",text: <any string>},}": {
      "status": 200,
      "body": {
        "notices": {
          "case:matcher:type": "And",
          "case:matcher:children": [
            {
              "case:matcher:type": "ArrayContains",
              "case:matcher:matchers": [
                {
                  "level": "debug",
                  "text": {
                    "case:matcher:type": "MatchString",
                    "case:matcher:example": "Created Foo version dc5eb529230038a4673b8c971395bd2922d8b240 with branch main and tags main",
                    "case:matcher:resolvesTo": "string",
                    "case:context:matchBy": "type"
                  }
                }
              ]
            },
            {
              "case:matcher:type": "ArrayContains",
              "case:matcher:matchers": [
                {
                  "level": "info",
                  "text": {
                    "case:matcher:type": "MatchString",
                    "case:matcher:example": "Pact published for Foo version dc5eb529230038a4673b8c971395bd2922d8b240 and provider Bar.",
                    "case:matcher:resolvesTo": "string",
                    "case:context:matchBy": "type"
                  }
                }
              ]
            }
          ],
          "case:matcher:example": {
            "notices": [
              {
                "level": "debug",
                "text": "Created Foo version dc5eb529230038a4673b8c971395bd2922d8b240 with branch main and tags main"
              },
              {
                "level": "info",
                "text": "Pact published for Foo version dc5eb529230038a4673b8c971395bd2922d8b240 and provider Bar."
              }
            ]
          }
        }
      },
      "case:matcher:type": "HttpResponseMatcher"
    },
    "matcher:an http \"POST\" request to \"/contracts/publish\" with a body with the following headers an object shaped like {accept: \"application/hal+json\",authorization: \"Bearer {{token}}\"}": {
      "method": "POST",
      "path": "/contracts/publish",
      "headers": {
        "accept": "application/hal+json",
        "authorization": {
          "case:matcher:type": "StringPrefix",
          "case:matcher:prefix": "Bearer ",
          "case:matcher:suffix": {
            "case:matcher:type": "ContextVariable",
            "case:matcher:variableName": "token"
          },
          "case:matcher:resolvesTo": "string"
        }
      },
      "body": {
        "pacticipantName": {
          "case:matcher:type": "MatchString",
          "case:matcher:example": "someString",
          "case:matcher:resolvesTo": "string",
          "case:context:matchBy": "type"
        },
        "pacticipantVersionNumber": {
          "case:matcher:type": "MatchString",
          "case:matcher:example": "someString",
          "case:matcher:resolvesTo": "string",
          "case:context:matchBy": "type"
        },
        "branch": {
          "case:matcher:type": "MatchString",
          "case:matcher:example": "someString",
          "case:matcher:resolvesTo": "string",
          "case:context:matchBy": "type"
        },
        "tags": [],
        "contracts": [
          {
            "consumerName": {
              "case:matcher:type": "MatchString",
              "case:matcher:example": "someString",
              "case:matcher:resolvesTo": "string",
              "case:context:matchBy": "type"
            },
            "providerName": {
              "case:matcher:type": "MatchString",
              "case:matcher:example": "someString",
              "case:matcher:resolvesTo": "string",
              "case:context:matchBy": "type"
            },
            "specification": "pact",
            "contentType": "application/json",
            "content": {
              "case:matcher:type": "MatchString",
              "case:matcher:example": "",
              "case:matcher:resolvesTo": "string",
              "case:context:matchBy": "type"
            }
          }
        ]
      },
      "case:matcher:type": "HttpRequestMatcher"
    }
  },
  "examples": [
    {
      "states": [
        {
          "case:state:type": "StateWithVariables",
          "stateName": "auth token is valid",
          "variables": {
            "token": {
              "case:matcher:type": "CascadingContext",
              "case:matcher:child": "TOKEN",
              "case:context:matchBy": "type"
            }
          }
        },
        {
          "case:state:type": "StateWithVariables",
          "stateName": "with provider name",
          "variables": {
            "providerName": {
              "case:matcher:type": "CascadingContext",
              "case:matcher:child": "http request provider",
              "case:context:matchBy": "type"
            }
          }
        }
      ],
      "mock": {
        "request": {
          "case:matcher:type": "Lookup",
          "case:matcher:uniqueName": "an http \"POST\" request to uriEncoded string '\"/pacts/provider/{{providerName}}/for-verification\"' with a body with the following headers an object shaped like {accept: \"application/hal+json\",authorization: \"Bearer {{token}}\"}",
          "case:matcher:child": {
            "method": "POST",
            "path": {
              "case:matcher:type": "UrlEncodedString",
              "case:matcher:child": {
                "case:matcher:type": "StringPrefix",
                "case:matcher:prefix": "/pacts/provider/",
                "case:matcher:suffix": {
                  "case:matcher:type": "StringSuffix",
                  "case:matcher:prefix": {
                    "case:matcher:type": "ContextVariable",
                    "case:matcher:variableName": "providerName"
                  },
                  "case:matcher:suffix": "/for-verification",
                  "case:matcher:resolvesTo": "string"
                },
                "case:matcher:resolvesTo": "string"
              },
              "case:matcher:accepts": "string",
              "case:matcher:resolvesTo": "string"
            },
            "body": {
              "consumerVersionSelectors": {
                "case:matcher:type": "ArrayEachEntryLike",
                "case:matcher:matcher": {
                  "case:matcher:type": "ObjectValuesMatch",
                  "case:matcher:matcher": {
                    "case:matcher:type": "MatchBoolean",
                    "case:matcher:example": true,
                    "case:context:matchBy": "type",
                    "case:matcher:resolvesTo": "boolean"
                  }
                }
              },
              "providerVersionTags": [
                "main"
              ]
            },
            "headers": {
              "accept": "application/hal+json",
              "authorization": {
                "case:matcher:type": "StringPrefix",
                "case:matcher:prefix": "Bearer ",
                "case:matcher:suffix": {
                  "case:matcher:type": "ContextVariable",
                  "case:matcher:variableName": "token",
                  "case:matcher:resolvesTo": "string"
                },
                "case:matcher:resolvesTo": "string"
              }
            },
            "case:matcher:type": "HttpRequestMatcher"
          }
        },
        "response": {
          "case:matcher:type": "Lookup",
          "case:matcher:uniqueName": "a (200) response with body an object shaped like {_embedded: an object shaped like {pacts: an array where each entry matches an object shaped like {verificationProperties: an object shaped like {notices: an array where each entry matches an object shaped like {text: <any string>}},_links: an object shaped like {self: an object shaped like {href: <any string>,name: <any string>}}}},_links: an object shaped like {self: an object shaped like {href: <any string>,title: <any string>}}}",
          "case:matcher:child": {
            "status": 200,
            "body": {
              "_embedded": {
                "pacts": {
                  "case:matcher:type": "ArrayEachEntryLike",
                  "case:matcher:matcher": {
                    "verificationProperties": {
                      "notices": {
                        "case:matcher:type": "ArrayEachEntryLike",
                        "case:matcher:matcher": {
                          "case:matcher:type": "CascadingContext",
                          "case:matcher:child": {
                            "text": "This pact is being verified because it is the pact for the latest version of Foo tagged with 'dev'"
                          },
                          "case:context:matchBy": "type"
                        }
                      }
                    },
                    "_links": {
                      "case:matcher:type": "CascadingContext",
                      "case:matcher:child": {
                        "self": {
                          "href": "http://localhost:9292/pacts/provider/Bar/consumer/Foo/pact-version/0e3369199f4008231946e0245474537443ccda2a",
                          "name": "Pact between Foo (v1.0.0) and Bar"
                        }
                      },
                      "case:context:matchBy": "type"
                    }
                  }
                }
              },
              "_links": {
                "case:matcher:type": "CascadingContext",
                "case:matcher:child": {
                  "self": {
                    "href": "http://localhost:9292/pacts/provider/Bar/for-verification",
                    "title": "Pacts to be verified"
                  }
                },
                "case:context:matchBy": "type"
              }
            },
            "case:matcher:type": "HttpResponseMatcher"
          }
        },
        "case:mock:type": "MockHttpServer",
        "case:run:context:setup": {
          "write": {
            "type": "MockHttpServer",
            "stateVariables": "default",
            "triggers": "provided"
          },
          "read": {
            "type": "MockHttpClient",
            "stateVariables": "state",
            "triggers": "generated"
          }
        }
      },
      "result": "VERIFIED"
    },
    {
      "states": [
        {
          "case:state:type": "StateWithVariables",
          "stateName": "valid basic auth credentials",
          "variables": {
            "username": {
              "case:matcher:type": "CascadingContext",
              "case:matcher:child": "someUsername",
              "case:context:matchBy": "type"
            },
            "password": {
              "case:matcher:type": "CascadingContext",
              "case:matcher:child": "somePassword",
              "case:context:matchBy": "type"
            }
          }
        },
        {
          "case:state:type": "StateWithVariables",
          "stateName": "with provider name",
          "variables": {
            "providerName": {
              "case:matcher:type": "CascadingContext",
              "case:matcher:child": "http request provider",
              "case:context:matchBy": "type"
            }
          }
        }
      ],
      "mock": {
        "request": {
          "case:matcher:type": "Lookup",
          "case:matcher:uniqueName": "an http \"POST\" request to uriEncoded string '\"/pacts/provider/{{providerName}}/for-verification\"' with a body with the following headers an object shaped like {accept: \"application/hal+json\",authorization: \"Basic http basic auth with username='{{username}}' and password={{password}}\"}",
          "case:matcher:child": {
            "method": "POST",
            "path": {
              "case:matcher:type": "UrlEncodedString",
              "case:matcher:child": {
                "case:matcher:type": "StringPrefix",
                "case:matcher:prefix": "/pacts/provider/",
                "case:matcher:suffix": {
                  "case:matcher:type": "StringSuffix",
                  "case:matcher:prefix": {
                    "case:matcher:type": "ContextVariable",
                    "case:matcher:variableName": "providerName"
                  },
                  "case:matcher:suffix": "/for-verification",
                  "case:matcher:resolvesTo": "string"
                },
                "case:matcher:resolvesTo": "string"
              },
              "case:matcher:accepts": "string",
              "case:matcher:resolvesTo": "string"
            },
            "body": {
              "consumerVersionSelectors": {
                "case:matcher:type": "ArrayEachEntryLike",
                "case:matcher:matcher": {
                  "case:matcher:type": "ObjectValuesMatch",
                  "case:matcher:matcher": {
                    "case:matcher:type": "MatchBoolean",
                    "case:matcher:example": true,
                    "case:context:matchBy": "type",
                    "case:matcher:resolvesTo": "boolean"
                  }
                }
              },
              "providerVersionTags": [
                "main"
              ]
            },
            "headers": {
              "accept": "application/hal+json",
              "authorization": {
                "case:matcher:type": "StringPrefix",
                "case:matcher:prefix": "Basic ",
                "case:matcher:suffix": {
                  "case:matcher:type": "HttpBasicAuth",
                  "case:matcher:username": {
                    "case:matcher:type": "ContextVariable",
                    "case:matcher:variableName": "username",
                    "case:matcher:resolvesTo": "string"
                  },
                  "case:matcher:password": {
                    "case:matcher:type": "ContextVariable",
                    "case:matcher:variableName": "password",
                    "case:matcher:resolvesTo": "string"
                  },
                  "case:matcher:resolvesTo": "string"
                },
                "case:matcher:resolvesTo": "string"
              }
            },
            "case:matcher:type": "HttpRequestMatcher"
          }
        },
        "response": {
          "case:matcher:type": "Lookup",
          "case:matcher:uniqueName": "a (200) response with body an object shaped like {_embedded: an object shaped like {pacts: an array where each entry matches an object shaped like {verificationProperties: an object shaped like {notices: an array where each entry matches an object shaped like {text: <any string>}},_links: an object shaped like {self: an object shaped like {href: <any string>,name: <any string>}}}},_links: an object shaped like {self: an object shaped like {href: <any string>,title: <any string>}}}",
          "case:matcher:child": {
            "status": 200,
            "body": {
              "_embedded": {
                "pacts": {
                  "case:matcher:type": "ArrayEachEntryLike",
                  "case:matcher:matcher": {
                    "verificationProperties": {
                      "notices": {
                        "case:matcher:type": "ArrayEachEntryLike",
                        "case:matcher:matcher": {
                          "case:matcher:type": "CascadingContext",
                          "case:matcher:child": {
                            "text": "This pact is being verified because it is the pact for the latest version of Foo tagged with 'dev'"
                          },
                          "case:context:matchBy": "type"
                        }
                      }
                    },
                    "_links": {
                      "case:matcher:type": "CascadingContext",
                      "case:matcher:child": {
                        "self": {
                          "href": "http://localhost:9292/pacts/provider/Bar/consumer/Foo/pact-version/0e3369199f4008231946e0245474537443ccda2a",
                          "name": "Pact between Foo (v1.0.0) and Bar"
                        }
                      },
                      "case:context:matchBy": "type"
                    }
                  }
                }
              },
              "_links": {
                "case:matcher:type": "CascadingContext",
                "case:matcher:child": {
                  "self": {
                    "href": "http://localhost:9292/pacts/provider/Bar/for-verification",
                    "title": "Pacts to be verified"
                  }
                },
                "case:context:matchBy": "type"
              }
            },
            "case:matcher:type": "HttpResponseMatcher"
          }
        },
        "case:mock:type": "MockHttpServer",
        "case:run:context:setup": {
          "write": {
            "type": "MockHttpServer",
            "stateVariables": "default",
            "triggers": "provided"
          },
          "read": {
            "type": "MockHttpClient",
            "stateVariables": "state",
            "triggers": "generated"
          }
        }
      },
      "result": "VERIFIED"
    },
    {
      "states": [
        {
          "case:state:type": "StateWithVariables",
          "stateName": "auth token is valid",
          "variables": {
            "token": {
              "case:matcher:type": "CascadingContext",
              "case:matcher:child": "TOKEN",
              "case:context:matchBy": "type"
            }
          }
        }
      ],
      "mock": {
        "request": {
          "case:matcher:type": "Lookup",
          "case:matcher:uniqueName": "an http \"PUT\" request to \"/pacts/provider/http%20request%20provider/consumer/http%20request%20consumer/version/<any string>\" without a body with the following headers an object shaped like {accept: \"application/json\",authorization: \"Bearer {{token}}\"}",
          "case:matcher:child": {
            "method": "PUT",
            "path": {
              "case:matcher:type": "StringPrefix",
              "case:matcher:prefix": "/pacts/provider/http%20request%20provider/consumer/http%20request%20consumer/version/",
              "case:matcher:suffix": {
                "case:matcher:type": "MatchString",
                "case:matcher:example": "someString",
                "case:matcher:resolvesTo": "string",
                "case:context:matchBy": "type"
              },
              "case:matcher:resolvesTo": "string"
            },
            "headers": {
              "accept": "application/json",
              "authorization": {
                "case:matcher:type": "StringPrefix",
                "case:matcher:prefix": "Bearer ",
                "case:matcher:suffix": {
                  "case:matcher:type": "ContextVariable",
                  "case:matcher:variableName": "token"
                },
                "case:matcher:resolvesTo": "string"
              }
            },
            "case:matcher:type": "HttpRequestMatcher"
          }
        },
        "response": {
          "case:matcher:type": "Lookup",
          "case:matcher:uniqueName": "a (200) response without a body",
          "case:matcher:child": {
            "status": 200,
            "case:matcher:type": "HttpResponseMatcher"
          }
        },
        "case:mock:type": "MockHttpServer",
        "case:run:context:setup": {
          "write": {
            "type": "MockHttpServer",
            "stateVariables": "default",
            "triggers": "provided"
          },
          "read": {
            "type": "MockHttpClient",
            "stateVariables": "state",
            "triggers": "generated"
          }
        }
      },
      "result": "VERIFIED"
    },
    {
      "states": [
        {
          "case:state:type": "StateWithVariables",
          "stateName": "auth token is not valid",
          "variables": {
            "invalidToken": {
              "case:matcher:type": "CascadingContext",
              "case:matcher:child": "TOKEN",
              "case:context:matchBy": "type"
            }
          }
        }
      ],
      "mock": {
        "request": {
          "case:matcher:type": "Lookup",
          "case:matcher:uniqueName": "an http \"PUT\" request to \"/pacts/provider/http%20request%20provider/consumer/http%20request%20consumer/version/<any string>\" without a body with the following headers an object shaped like {accept: \"application/json\",authorization: \"Bearer {{invalidToken}}\"}",
          "case:matcher:child": {
            "method": "PUT",
            "path": {
              "case:matcher:type": "StringPrefix",
              "case:matcher:prefix": "/pacts/provider/http%20request%20provider/consumer/http%20request%20consumer/version/",
              "case:matcher:suffix": {
                "case:matcher:type": "MatchString",
                "case:matcher:example": "someString",
                "case:matcher:resolvesTo": "string",
                "case:context:matchBy": "type"
              },
              "case:matcher:resolvesTo": "string"
            },
            "headers": {
              "accept": "application/json",
              "authorization": {
                "case:matcher:type": "StringPrefix",
                "case:matcher:prefix": "Bearer ",
                "case:matcher:suffix": {
                  "case:matcher:type": "ContextVariable",
                  "case:matcher:variableName": "invalidToken"
                },
                "case:matcher:resolvesTo": "string"
              }
            },
            "case:matcher:type": "HttpRequestMatcher"
          }
        },
        "response": {
          "case:matcher:type": "Lookup",
          "case:matcher:uniqueName": "a (403) response without a body",
          "case:matcher:child": {
            "status": 403,
            "case:matcher:type": "HttpResponseMatcher"
          }
        },
        "case:mock:type": "MockHttpServer",
        "case:run:context:setup": {
          "write": {
            "type": "MockHttpServer",
            "stateVariables": "default",
            "triggers": "provided"
          },
          "read": {
            "type": "MockHttpClient",
            "stateVariables": "state",
            "triggers": "generated"
          }
        }
      },
      "result": "VERIFIED"
    },
    {
      "states": [
        {
          "case:state:type": "StateWithVariables",
          "stateName": "auth token is valid",
          "variables": {
            "token": {
              "case:matcher:type": "CascadingContext",
              "case:matcher:child": "TOKEN",
              "case:context:matchBy": "type"
            }
          }
        }
      ],
      "mock": {
        "request": {
          "case:matcher:type": "Lookup",
          "case:matcher:uniqueName": "an http \"POST\" request to \"/contracts/publish\" with a body with the following headers an object shaped like {accept: \"application/hal+json\",authorization: \"Bearer {{token}}\"}",
          "case:matcher:child": {
            "method": "POST",
            "path": "/contracts/publish",
            "headers": {
              "accept": "application/hal+json",
              "authorization": {
                "case:matcher:type": "StringPrefix",
                "case:matcher:prefix": "Bearer ",
                "case:matcher:suffix": {
                  "case:matcher:type": "ContextVariable",
                  "case:matcher:variableName": "token"
                },
                "case:matcher:resolvesTo": "string"
              }
            },
            "body": {
              "pacticipantName": {
                "case:matcher:type": "MatchString",
                "case:matcher:example": "someString",
                "case:matcher:resolvesTo": "string",
                "case:context:matchBy": "type"
              },
              "pacticipantVersionNumber": {
                "case:matcher:type": "MatchString",
                "case:matcher:example": "someString",
                "case:matcher:resolvesTo": "string",
                "case:context:matchBy": "type"
              },
              "branch": {
                "case:matcher:type": "MatchString",
                "case:matcher:example": "someString",
                "case:matcher:resolvesTo": "string",
                "case:context:matchBy": "type"
              },
              "tags": [],
              "contracts": [
                {
                  "consumerName": {
                    "case:matcher:type": "MatchString",
                    "case:matcher:example": "someString",
                    "case:matcher:resolvesTo": "string",
                    "case:context:matchBy": "type"
                  },
                  "providerName": {
                    "case:matcher:type": "MatchString",
                    "case:matcher:example": "someString",
                    "case:matcher:resolvesTo": "string",
                    "case:context:matchBy": "type"
                  },
                  "specification": "pact",
                  "contentType": "application/json",
                  "content": {
                    "case:matcher:type": "MatchString",
                    "case:matcher:example": "",
                    "case:matcher:resolvesTo": "string",
                    "case:context:matchBy": "type"
                  }
                }
              ]
            },
            "case:matcher:type": "HttpRequestMatcher"
          }
        },
        "response": {
          "case:matcher:type": "Lookup",
          "case:matcher:uniqueName": "a (200) response with body an object shaped like {notices: an array containing an object shaped like {level: \"debug\",text: <any string>}, and an array containing an object shaped like {level: \"info\",text: <any string>},}",
          "case:matcher:child": {
            "status": 200,
            "body": {
              "notices": {
                "case:matcher:type": "And",
                "case:matcher:children": [
                  {
                    "case:matcher:type": "ArrayContains",
                    "case:matcher:matchers": [
                      {
                        "level": "debug",
                        "text": {
                          "case:matcher:type": "MatchString",
                          "case:matcher:example": "Created Foo version dc5eb529230038a4673b8c971395bd2922d8b240 with branch main and tags main",
                          "case:matcher:resolvesTo": "string",
                          "case:context:matchBy": "type"
                        }
                      }
                    ]
                  },
                  {
                    "case:matcher:type": "ArrayContains",
                    "case:matcher:matchers": [
                      {
                        "level": "info",
                        "text": {
                          "case:matcher:type": "MatchString",
                          "case:matcher:example": "Pact published for Foo version dc5eb529230038a4673b8c971395bd2922d8b240 and provider Bar.",
                          "case:matcher:resolvesTo": "string",
                          "case:context:matchBy": "type"
                        }
                      }
                    ]
                  }
                ],
                "case:matcher:example": {
                  "notices": [
                    {
                      "level": "debug",
                      "text": "Created Foo version dc5eb529230038a4673b8c971395bd2922d8b240 with branch main and tags main"
                    },
                    {
                      "level": "info",
                      "text": "Pact published for Foo version dc5eb529230038a4673b8c971395bd2922d8b240 and provider Bar."
                    }
                  ]
                }
              }
            },
            "case:matcher:type": "HttpResponseMatcher"
          }
        },
        "case:mock:type": "MockHttpServer",
        "case:run:context:setup": {
          "write": {
            "type": "MockHttpServer",
            "stateVariables": "default",
            "triggers": "provided"
          },
          "read": {
            "type": "MockHttpClient",
            "stateVariables": "state",
            "triggers": "generated"
          }
        }
      },
      "result": "VERIFIED"
    },
    {
      "states": [
        {
          "case:state:type": "StateWithVariables",
          "stateName": "auth token is not valid",
          "variables": {
            "invalidToken": {
              "case:matcher:type": "CascadingContext",
              "case:matcher:child": "TOKEN",
              "case:context:matchBy": "type"
            }
          }
        }
      ],
      "mock": {
        "request": {
          "case:matcher:type": "Lookup",
          "case:matcher:uniqueName": "an http \"POST\" request to \"/contracts/publish\" with a body with the following headers an object shaped like {accept: \"application/hal+json\",authorization: \"Bearer {{token}}\"}",
          "case:matcher:child": {
            "method": "POST",
            "path": "/contracts/publish",
            "headers": {
              "accept": "application/hal+json",
              "authorization": {
                "case:matcher:type": "StringPrefix",
                "case:matcher:prefix": "Bearer ",
                "case:matcher:suffix": {
                  "case:matcher:type": "ContextVariable",
                  "case:matcher:variableName": "token"
                },
                "case:matcher:resolvesTo": "string"
              }
            },
            "body": {
              "pacticipantName": {
                "case:matcher:type": "MatchString",
                "case:matcher:example": "someString",
                "case:matcher:resolvesTo": "string",
                "case:context:matchBy": "type"
              },
              "pacticipantVersionNumber": {
                "case:matcher:type": "MatchString",
                "case:matcher:example": "someString",
                "case:matcher:resolvesTo": "string",
                "case:context:matchBy": "type"
              },
              "branch": {
                "case:matcher:type": "MatchString",
                "case:matcher:example": "someString",
                "case:matcher:resolvesTo": "string",
                "case:context:matchBy": "type"
              },
              "tags": [],
              "contracts": [
                {
                  "consumerName": {
                    "case:matcher:type": "MatchString",
                    "case:matcher:example": "someString",
                    "case:matcher:resolvesTo": "string",
                    "case:context:matchBy": "type"
                  },
                  "providerName": {
                    "case:matcher:type": "MatchString",
                    "case:matcher:example": "someString",
                    "case:matcher:resolvesTo": "string",
                    "case:context:matchBy": "type"
                  },
                  "specification": "pact",
                  "contentType": "application/json",
                  "content": {
                    "case:matcher:type": "MatchString",
                    "case:matcher:example": "",
                    "case:matcher:resolvesTo": "string",
                    "case:context:matchBy": "type"
                  }
                }
              ]
            },
            "case:matcher:type": "HttpRequestMatcher"
          }
        },
        "response": {
          "case:matcher:type": "Lookup",
          "case:matcher:uniqueName": "a (403) response without a body",
          "case:matcher:child": {
            "status": 403,
            "case:matcher:type": "HttpResponseMatcher"
          }
        },
        "case:mock:type": "MockHttpServer",
        "case:run:context:setup": {
          "write": {
            "type": "MockHttpServer",
            "stateVariables": "default",
            "triggers": "provided"
          },
          "read": {
            "type": "MockHttpClient",
            "stateVariables": "state",
            "triggers": "generated"
          }
        }
      },
      "result": "VERIFIED"
    }
  ]
}
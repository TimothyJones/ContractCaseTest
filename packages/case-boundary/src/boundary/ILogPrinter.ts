import { Result } from './Result';

export interface ILogPrinter {
  /**
   * Called by ContractCase to ask the DSL to print a log line. You do not need
   * to filter calls to this interface, it will only be called when it is
   * appropriate to print.
   *
   * @param level - A `LogLevel` string, either `error`, `warn`, `debug`,
   * `maintainerDebug` or `deepMaintainerDebug` Use this to programmatically
   * decide any colour formatting.. (although `none` is a possible log level,
   * this function will never be called with `none`).
   * @param timestamp - The timestamp generated by ContractCase
   * @param version - The version string for ContractCase core
   * @param typeString - A rendered version of the LogLevel. Do not rely on this value programmatically, use the `level` parameter instead.
   * @param location - A string that represents the location that this log came from
   * @param message - The main message of this log line
   * @param additional - Any additional output to print on extra lines (you may want to indent this when printing)
   */
  log(
    level: string,
    timestamp: string,
    version: string,
    typeString: string,
    location: string,
    message: string,
    additional: string
  ): Result;
}
